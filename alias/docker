#!/bin/zsh

########################################################################################################################
#                                                                                                                      #
#                                           GENERIC DOCKER-COMPOSE FUNCTION                                            #
#                                                                                                                      #
########################################################################################################################

# Execute docker-compose with the right yml files
function dc {
    $(docker-toolbox docker get-command) $@
}

# Launch docker exec bash in given container
function dcBash {
    if [ $# -lt 1 ]; then
        echo 1>&2 "[dcexec] please provide the container name"
        return 1
    fi
    CurrentWd=$(pwd | sed "s|$PROJECTS_ROOT_FOLDER||")
    $(docker-toolbox docker get-command) exec --workdir /home/"$CurrentWd" $1 bash
}

########################################################################################################################
#                                                                                                                      #
#                                               PHP CONTAINER FUNCTIONS                                                #
#                                                                                                                      #
########################################################################################################################

# Execute PHP in the php container
function dcPhp {
    CurrentWd=$(pwd | sed "s|$PROJECTS_ROOT_FOLDER||")
    $(docker-toolbox docker get-command) exec --workdir /home/"$CurrentWd" php php "$@"
}

# Execute Composer in the php container
function dcComposer {
    CurrentWd=$(pwd | sed "s|$PROJECTS_ROOT_FOLDER||")
    $(docker-toolbox docker get-command) exec --workdir /home/"$CurrentWd"/ php composer "$@"
}
